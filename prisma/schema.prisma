generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Testimonial{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  message     String
  isPublished Boolean
  createdAt   DateTime  @default(now()) 
}

model Teacher{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  speciality  String
  image       String
  about_me    String
  about_help  String
  courseIds   String[]  @db.ObjectId 
  courses     Course[]  @relation(fields: [courseIds], references: [id])
  createdAt   DateTime  @default(now()) 
  
}

model Course{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  tags        String[]
  teacherIds  String[]  @db.ObjectId 
  teachers    Teacher[] @relation(fields: [teacherIds], references: [id])
  createdAt   DateTime  @default(now()) 

}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  hashedPassword String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  accounts      Account[]
}


